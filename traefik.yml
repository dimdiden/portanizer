version: '3.3'

services:
  traefik:
    image: traefik:v1.7
    ports:
      - 80:80
      - 443:443
    deploy:
      replicas: ${TRAEFIK_REPLICAS:-3}
      placement:
        constraints:
          - node.role == manager
          - node.labels.traefik-public.traefik-public-certificates == true
        preferences:
          - spread: node.id
      labels:
        - traefik.frontend.rule=Host:traefik.${DOMAIN?Variable DOMAIN not set}
        - traefik.enable=true
        - traefik.port=8080
        - traefik.tags=${TRAEFIK_PUBLIC_TAG:-traefik-public}
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
        - traefik.frontend.auth.basic.users=${USERNAME?Variable USERNAME not set}:${HASHED_PASSWORD?Variable HASHED_PASSWORD not set}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - traefik-public-certificates:/certificates
    command:
      - "--docker"
      - "--docker.swarmmode"
      - "--docker.watch"
      - "--docker.exposedbydefault=false"
      - "--constraints=tag==traefik-public"
      - "--entrypoints=Name:http Address::80"
      - "--entrypoints=Name:https Address::443 TLS"
      - "--acme"
        #- "--acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--acme.email=${EMAIL?Variable EMAIL not set}"
      - "--acme.storage=/certificates/acme.json"
      - "--acme.entryPoint=https"
      - "--acme.httpChallenge.entryPoint=http"
      - "--acme.onhostrule=true"
      - "--acme.acmelogging=true"
      - "--logLevel=INFO"
      - "--accessLog"
      - "--api"
    networks:
      - default
      - traefik-public
        
volumes:
  traefik-public-certificates:
    external: true

networks:
  traefik-public:
    external: true
